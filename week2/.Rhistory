# Read up on the tidyverse’s `lubridate` package, and use it to extract the year from release_date
View(df)
View(df)
# challenge 5
# Read up on the tidyverse’s `lubridate` package, and use it to extract the year from release_date
df$release_year <- df$release_date %>%  str_sub(start=-4)
View(df)
View(df)
df %>% group_by(platform) %>%
summarise(mean_meta = mean(meta_score)) %>%
print
df %>%
group_by(platform) %>%
summarise(mean_meta = mean(meta_score)) %>%
print
# challege 6
#  Imagine a threshold for a critic score which is so high that only 1% of games would exceed this overall score. Use R’s quantile function to estimate this value for each platform.
df %>%
group_by(platform) %>%
summarise(mean_meta = mean(meta_score)) %>%
filter(, mean_meta >= quantile(mean_meta, 0.99)) %>%
print
# challege 6
#  Imagine a threshold for a critic score which is so high that only 1% of games would exceed this overall score. Use R’s quantile function to estimate this value for each platform.
df %>%
group_by(platform) %>%
summarise(mean_meta = mean(meta_score)) %>%
quantile(mean_meta, 0.99) %>%
print
# challege 6
#  Imagine a threshold for a critic score which is so high that only 1% of games would exceed this overall score. Use R’s quantile function to estimate this value for each platform.
df %>%
group_by(platform) %>%
summarise(mean_meta = mean(meta_score)) %>%
quantile(mean(mean_score), 0.99) %>%
print
# challege 6
#  Imagine a threshold for a critic score which is so high that only 1% of games would exceed this overall score. Use R’s quantile function to estimate this value for each platform.
df %>%
group_by(platform) %>%
summarise(mean_meta = mean(meta_score)) %>%
filter(, mean_meta >= quantile(mean_meta, 0.99)) %>%
print
# challege 6
#  Imagine a threshold for a critic score which is so high that only 1% of games would exceed this overall score. Use R’s quantile function to estimate this value for each platform.
temp <- df %>%
group_by(platform) %>%
summarise(mean_meta = mean(meta_score)) %>%
# challege 6
#  Imagine a threshold for a critic score which is so high that only 1% of games would exceed this overall score. Use R’s quantile function to estimate this value for each platform.
temp <- df %>%
group_by(platform) %>%
summarise(mean_meta = mean(meta_score)) %>%
#  filter(, mean_meta >= quantile(mean_meta, 0.99)) %>%
# print
View(temp)
# challege 6
#  Imagine a threshold for a critic score which is so high that only 1% of games would exceed this overall score. Use R’s quantile function to estimate this value for each platform.
temp <- (df %>%
group_by(platform) %>%
summarise(mean_meta = mean(meta_score)))
#  filter(, mean_meta >= quantile(mean_meta, 0.99)) %>%
# print
View(temp)
quantile(temp$mean_meta, c(0.09))
df %>%
group_by(platform) %>%
summarise(mean_meta = mean(meta_score)) %>%
quantile(mean_meta, c(0.09)) %>%
print
df %>%
group_by(platform) %>%
summarise(mean_meta = mean(meta_score)) %>%
quantile(df$mean_meta, c(0.09)) %>%
print
rlang::last_trace()
df %>%
group_by(platform) %>%
summarise(mean_meta = mean(meta_score) >=
quantile(df$mean_meta, c(0.09))) %>%
print
df %>%
group_by(platform) %>%
summarise(mean_meta = mean(meta_score) >=
quantile(mean(df$mean_score), c(0.09))) %>%
print
df_grp_by_plf %>%
filter(, mean_meta >= quantile(mean_meta, 0.99)) %>%
print
# challege 6
#  Imagine a threshold for a critic score which is so high that only 1% of games would exceed this overall score. Use R’s quantile function to estimate this value for each platform.
df_grp_by_plf <- (df %>%
group_by(platform) %>%
summarise(mean_meta = mean(meta_score)))
View(df_grp_by_plf)
df_grp_by_plf %>%
filter(, mean_meta >= quantile(mean_meta, 0.99)) %>%
print
quantile(df_grp_by_plf$mean_meta, 0.99)
View(df_grp_by_plf)
df %>%
group_by(platform) %>%
summarise(mean_meta = mean(meta_score)) %>%
filter(, mean_meta >= quantile(mean_meta, 0.99)) %>%
print
df %>%
group_by(platform) %>%
summarise(mean_meta = mean(meta_score)) %>%
filter(, mean_meta >= quantile(mean_meta, 0.99)) %>%
mutate(, quantile = quantile(mean_meta, 0.99)) %>%
print
df %>%
group_by(platform) %>%
summarise(mean_meta = mean(meta_score)) %>%
filter(, mean_meta >= quantile(mean_meta, 0.99)) %>%
mutate(, quantile_val = quantile(mean_meta, 0.99)) %>%
print
df %>%
group_by(platform) %>%
summarise(mean_meta = mean(meta_score)) %>%
filter(, mean_meta >= quantile(mean_meta, 0.99)) %>%
mutate(, quantile_val = quantile(mean(meta_score), 0.99)) %>%
print
df %>%
group_by(platform) %>%
summarise(mean_meta = mean(meta_score)) %>%
filter(, mean_meta >= quantile(mean_meta, 0.99)) %>%
mutate(, quantile_val = quantile(mean(df$meta_score), 0.99)) %>%
print
df %>%
group_by(platform) %>%
summarise(mean_meta = mean(meta_score)) %>%
filter(, mean_meta >= quantile(mean_meta, 0.99)) %>%
mutate(, quantile_val = quantile(meta_score, 0.99)) %>%
print
df %>%
group_by(platform) %>%
summarise(mean_meta = mean(meta_score)) %>%
filter(, mean_meta >= quantile(mean_meta, 0.99)) %>%
mutate(, quantile_val = quantile(meta_mean, 0.99)) %>%
print
df %>%
group_by(platform) %>%
summarise(mean_meta = mean(meta_score)) %>%
filter(, mean_meta >= quantile(mean_meta, 0.99)) %>%
mutate(, quantile_val = quantile(mean_meta, 0.99)) %>%
print
quantile(df_grp_by_plf$mean_meta, 0.99)
# challege 6
#  Imagine a threshold for a critic score which is so high that only 1% of games would exceed this overall score. Use R’s quantile function to estimate this value for each platform.
df_grp_by_plf <- (df %>%
group_by(platform) %>%
summarise(mean_meta = mean(meta_score)))
View(df_grp_by_plf)
df %>%
group_by(platform) %>%
summarise(mean_meta = mean(meta_score)) %>%
filter(, mean_meta >= quantile(mean_meta, 0.99)) %>%
print(mean_meta)
df %>%
group_by(platform) %>%
summarise(mean_meta = mean(meta_score)) %>%
filter(, mean_meta >= quantile(mean_meta, 0.99)) %>%
# mutate(, quantile_val = quantile(mean_meta, 0.99)) %>%
print
df %>%
group_by(platform) %>%
summarise(mean_meta = mean(meta_score)) %>%
# filter(, mean_meta >= quantile(mean_meta, 0.99)) %>%
# mutate(, quantile_val = quantile(mean_meta, 0.99)) %>%
quantile(mean_meta, c(0.99))
df %>%
group_by(platform) %>%
summarise(mean_meta = mean(meta_score)) %>%
# filter(, mean_meta >= quantile(mean_meta, 0.99)) %>%
# mutate(, quantile_val = quantile(mean_meta, 0.99)) %>%
quantile(mean_meta, c(0.99)) %>%
print
# challege 6
#  Imagine a threshold for a critic score which is so high that only 1% of games would exceed this overall score. Use R’s quantile function to estimate this value for each platform.
df_grp_by_plf <- (df %>%
group_by(platform) %>%
summarise(mean_meta = mean(meta_score)))
View(df_grp_by_plf)
quantile(df_grp_by_plf$mean_meta, 0.99)
treshold <- quantile(df_grp_by_plf$mean_meta, 0.99)
threshold <- quantile(df_grp_by_plf$mean_meta, 0.99)
df_grp_by_plf %>%
filter(, mean_meta >= quantile(mean_meta, 0.99)) %>%
print
df_grp_by_plf %>%
filter(, mean_meta >= quantile(mean_meta, 0.99)) %>%
print
View(df_grp_by_plf)
ggplot(df, aes(x=platform, y=meta_scores)) +
geop_boxplot(color="blue", fill="white")+
labs(
title="Distribution of Critic Scores by Platform",
x="Platform",
y="Meta Scores")
ggplot(df, aes(x=platform, y=meta_scores)) +
geom_boxplot(color="blue", fill="white")+
labs(
title="Distribution of Critic Scores by Platform",
x="Platform",
y="Meta Scores")
View(df)
ggplot(df, aes(x=platform, y=meta_score)) +
geom_boxplot(color="blue", fill="white")+
labs(
title="Distribution of Critic Scores by Platform",
x="Platform",
y="Meta Scores")
df_grp_by_plf <- (df %>%
select(platform, meta_score, user_review) %>%
group_by(platform))
View(df_grp_by_plf)
View(df %>% group_by(platform))
select(platform, meta_score = sum(meta_score), user_review = sum(user_review)) %>%
View(df_grp_by_plf)
df_grp_by_plf <- (df %>%
select(platform, meta_score = sum(meta_score),                        user_review = sum(user_review)))
df_grp_by_plf <- (df %>%
select(platform, meta_score, user_review) %>%
group_by(platform) %>%
summarise(platform,
meta_score = mean(meta_score),
user_review=mean(user_review))
)
# challenge 8
# Generate a metric which represents the divergence of critic scores from user scores. Use descriptive statistics and visualisations to explore whether this divergence may be particularly extreme in specific platforms. Hint: You may need to account for a difference in ranges between critic and user scores in order to accurately generate this score. User scores range up to 10, but what range of values may critic scores take?
df <- df %>%
mutate(divergence = abs(meta_score - (user_scores * 10)))
# challenge 8
# Generate a metric which represents the divergence of critic scores from user scores. Use descriptive statistics and visualisations to explore whether this divergence may be particularly extreme in specific platforms. Hint: You may need to account for a difference in ranges between critic and user scores in order to accurately generate this score. User scores range up to 10, but what range of values may critic scores take?
df <- df %>%
mutate(divergence = abs(meta_score - (user_score * 10)))
# challenge 8
# Generate a metric which represents the divergence of critic scores from user scores. Use descriptive statistics and visualisations to explore whether this divergence may be particularly extreme in specific platforms. Hint: You may need to account for a difference in ranges between critic and user scores in order to accurately generate this score. User scores range up to 10, but what range of values may critic scores take?
df <- df %>%
mutate(divergence = abs(meta_score - (user_review * 10)))
View(df)
df_grp_by_plf <- (df %>%
group_by(platform) %>%
summarise(
mean_divergence = mean(divergence),
sd_divergence=sd(divergence))
)
View(df_grp_by_plf)
divergence_df <- (df %>%
group_by(platform) %>%
summarise(
mean_divergence = mean(divergence),
sd_divergence=sd(divergence))
)
View(divergence_df)
ggplot(divergence_df, aes(x=platform, y=mean_divergence))+
geom_bar(stat="identity", fill="white", color="blue")+
labs(
title="Divergence of Critic Scores from User Reviews",
x="Platform",
y="Mean Divergence"
)
divergence_df <- df %>%
group_by(platform) %>%
summarise(
mean_divergence = mean(divergence),
sd_divergence=sd(divergence))
View(divergence_df)
# challenge 9
# Generate visualisations and descriptive statistics to explore whether disagreement between critics and users is becoming more or less extreme with time.
disagreement_df <- (df %>%
select(release_year, meta_score, user_review, divergence) %>%
group_by(release_year)
)
View(disagreement_df)
View(order(disagreement_df)
View(order(disagreement_df))
View(arrange(disagreement_df))
View(arrange(disagreement_df))
# challenge 9
# Generate visualisations and descriptive statistics to explore whether disagreement between critics and users is becoming more or less extreme with time.
disagreement_df <- (df %>%
select(release_year, meta_score, user_review, divergence) %>%
group_by(divergence)
)
View(arrange(disagreement_df))
release_year
View(arrange(disagreement_df))
View(disagreement_df)
View(disagreement_df)
View(disagreement_df(release_year))
View(disagreement_df(release_year))
View(arrange(disagreement_df$release_year)
View(arrange(disagreement_df$release_year))
View(arrange(disagreement_df, release_year))
summarise(mean_divergence = mean(divergence)
View(arrange(disagreement_df, release_year))
View(disagreement_df)
View(disagreement_df)
# challenge 9
# Generate visualisations and descriptive statistics to explore whether disagreement between critics and users is becoming more or less extreme with time.
disagreement_df <- (df %>%
select(release_year, meta_score, user_review, divergence) %>%
group_by(release_year) %>%
summarise(mean_divergence = mean(divergence),
mean_meta_score = mean(meta_score),
mean_user_review = mean(user_review))
)
View(disagreement_df)
ggplot(disagreement_df, aes(x=release_year, y=mean_divergence)) +
geom_point() +
stat_smooth(method = "lm",
col = "#C42126",
se = FALSE,
size = 1)
View(arrange(disagreement_df, release_year))
ggplot(disagreement_df, aes(x=release_year, y=mean_divergence)) +
geom_point() +
stat_smooth(method = "lm",
col = "#C42126",
se = FALSE)
ggplot(disagreement_df, aes(x=release_year, y=mean_divergence)) +
geom_point(aes(color = factor(gear))) +
stat_smooth(method = "lm",
col = "#C42126",
se = FALSE)
ggplot(disagreement_df, aes(x=release_year, y=mean_divergence)) +
geom_point(aes(color = factor(mean_divergence))) +
stat_smooth(method = "lm",
col = "#C42126",
se = FALSE)
ggplot(disagreement_df, aes(x=release_year, y=mean_divergence)) +
geom_point() +
stat_smooth(method = "lm",
col = "#C42126",
se = FALSE)
ggplot(disagreement_df, aes(x=release_year, y=mean_divergence)) +
geom_point() +
stat_smooth(method = "lm",
col = "red",
se = FALSE)
ggplot(disagreement_df, aes(x=release_year, y=mean_divergence)) +
geom_point() +
geom_smooth(method = "auto",
col = "red",
se = TRUE,
level=0.95)
ggplot(disagreement_df, aes(x=release_year, y=mean_divergence)) +
geom_point() +
geom_smooth()
ggplot(disagreement_df, aes(x=release_year, y=mean_divergence)) +
geom_point() +
geom_smooth(method = "auto",
col = "red")
library(ggplot2)
ggplot(disagreement_df, aes(x=release_year, y=mean_divergence)) +
geom_point() +
geom_smooth(method = "auto",
col = "red")
ggplot(disagreement_df, aes(x=release_year, y=mean_divergence)) +
geom_point() +
labs(
title = "Disagreement between critics and usere",
x = "Released Year",
Y = "Divergence between critics and users"
) +
geom_smooth(method = "auto",
col = "red")
# challenge 1
# calculate the range in user scores yourself over this dataset.
df$user_review) %>% range %>%  print
# challenge 1
# calculate the range in user scores yourself over this dataset.
df$user_review %>% range %>%  print
df_grp_by_plf %>%
filter(mean_meta >= quantile(mean_meta, 0.99)) %>%
print
df_grp_by_plf %>%
filter(mean_meta >= quantile(mean_meta, 0.99)) %>%
print
# challege 6
#  Imagine a threshold for a critic score which is so high that only 1% of games would exceed this overall score. Use R’s quantile function to estimate this value for each platform.
df_grp_by_plf <- (df %>%
group_by(platform) %>%
summarise(mean_meta = mean(meta_score)))
View(df_grp_by_plf)
df_grp_by_plf %>%
filter(mean_meta >= quantile(mean_meta, 0.99)) %>%
print
# ?question
# can I abbreiviate above codes into one pipe code?
# I tried, but how can I affix summarse ~ filter part. mean_meta is not existent
df %>%
group_by(platform) %>%
summarise(mean_meta = mean(meta_score)) %>%
filter(mean_meta >= quantile(mean_meta, c(0,99))) %>%
print
# ?question
# can I abbreiviate above codes into one pipe code?
# I tried, but how can I affix summarse ~ filter part. mean_meta is not existent
df %>%
group_by(platform) %>%
summarise(mean_meta = mean(meta_score)) %>%
filter(mean_meta >= quantile(mean_meta, c(0,99))) %>%
print
# ?question
# can I abbreiviate above codes into one pipe code?
# I tried, but how can I affix summarse ~ filter part. mean_meta is not existent
df %>%
group_by(platform) %>%
summarise(mean_meta = mean(meta_score)) %>%
filter(mean_meta >= quantile(mean_meta, c(0.99))) %>%
print
install.packages("tidyverse")
install.packages("tidyverse")
# setwd("C:/Users/wgc521/Desktop/week2")
setwd("/Users/eunsong/Documents/WorkSpace/ROCS_R/week2")
df <- read_csv("all_games_cleaned.csv")
View(df)
# challenge 9
# Generate visualisations and descriptive statistics to explore whether disagreement between critics and users is becoming more or less extreme with time.
library(ggplot2)
disagreement_df <- df %>%
select(release_year, divergence) %>%
group_by(release_year) %>%
summarise(mean_divergence = mean(divergence))
View(disagreement_df)
ggplot(disagreement_df, aes(x=release_year, y=mean_divergence))+
geom_point()+
labs(
title="Disagreement between critics and users over years",
x="release year",
y="disagreement between critcs and users"
)
# challenge 10
# If you scatterplot metascores and user scores, you will notice that the plotting is inaccurate due to the relatively low number of values that each of these variables can take on. Investigate a visualisation which would take this into account, and use it to visualise the relationship between these values.
df$user_review_ten <- df$user_review * 10 %>% print
View(df)
ggplot(df, aes(x=meta_score, y=platform))+
geom_boxplot(fill="steelblue")
ggplot(df, aes(x=meta_score, y=platform, fill=user_review_ten))+
geom_boxplot()
ggplot(df, aes(x=meta_score, y=platform, fill=user_review_ten))+
geom_boxplot()
View(df)
# challenge 10
# If you scatterplot metascores and user scores, you will notice that the plotting is inaccurate due to the relatively low number of values that each of these variables can take on. Investigate a visualisation which would take this into account, and use it to visualise the relationship between these values.
df$user_review_ten <- df$user_review * 10 %>% print
library(tidyverse)
# challenge 10
# If you scatterplot metascores and user scores, you will notice that the plotting is inaccurate due to the relatively low number of values that each of these variables can take on. Investigate a visualisation which would take this into account, and use it to visualise the relationship between these values.
df$user_review_ten <- df$user_review * 10 %>% print
View(df)
ggplot(df, aes(x=meta_score, y=platform, fill=user_review_ten))+
geom_boxplot()
View(stage2)
View(df)
user_review_ten
ggplot(df, aes(x=platform, y=meta_score, fill=user_review_ten))+
geom_boxplot()
ggplot(df, aes(x=platform, y=user_review, fill=meta_score))+
geom_bar(stat = "identity", position = "dodge") +
labs(
title = "Meta Scores and User Scores (x10) by Platform",
x = "Platform",
y = "Score"
) +
scale_fill_manual(values = c("meta_score" = "blue", "user_score" = "green")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(df, aes(x=platform, y=user_review, fill=meta_score))+
geom_bar(stat = "identity", position = "dodge") +
labs(
title = "Meta Scores and User Scores (x10) by Platform",
x = "Platform",
y = "Score"
)
ggplot(df, aes(x=platform, y=user_review_ten, fill=meta_score))+
geom_bar(stat = "identity", position = "dodge") +
labs(
title = "Meta Scores and User Scores (x10) by Platform",
x = "Platform",
y = "Score"
)
ggplot(df, aes(x=platform, y=meta_score, fill=user_review_ten))+
geom_bar(stat = "identity", position = "dodge") +
labs(
title = "Meta Scores and User Scores (x10) by Platform",
x = "Platform",
y = "Score"
)
ggplot(df, aes(x = platform)) +
geom_boxplot(aes(y = meta_score), fill = "blue", width = 0.5, alpha = 0.7) +
geom_boxplot(aes(y = user_review), fill = "green", width = 0.5, alpha = 0.7) +
labs(
title = "Box Plot of Meta Score and User Review by Platform",
x = "Platform",
y = "Score"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(df, aes(x = platform)) +
geom_boxplot(aes(y = meta_score), fill = "blue", width = 0.5, alpha = 0.7) +
geom_boxplot(aes(y = user_review_ten), fill = "green", width = 0.5, alpha = 0.7) +
labs(
title = "Box Plot of Meta Score and User Review by Platform",
x = "Platform",
y = "Score"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
